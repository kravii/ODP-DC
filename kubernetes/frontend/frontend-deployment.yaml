apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-provisioning-frontend
  namespace: vm-system
  labels:
    app: vm-provisioning-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vm-provisioning-frontend
  template:
    metadata:
      labels:
        app: vm-provisioning-frontend
    spec:
      containers:
      - name: frontend
        image: vm-provisioning-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "http://vm-provisioner-service:8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vm-provisioning-frontend-service
  namespace: vm-system
spec:
  selector:
    app: vm-provisioning-frontend
  ports:
  - port: 80
    targetPort: 3000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vm-provisioning-frontend-ingress
  namespace: vm-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
spec:
  tls:
  - hosts:
    - "vm-provisioning.hetzner-dc.local"
    secretName: vm-provisioning-frontend-tls
  rules:
  - host: "vm-provisioning.hetzner-dc.local"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vm-provisioning-frontend-service
            port:
              number: 80